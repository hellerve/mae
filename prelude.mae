(def true {{} {}})
(def false {})

(def (if c a b)
  (({true a false b} c)))

(def (neg a) (if a (fn () false) (fn () true)))

(def (empty? m) (= {} m))

(def (foldr f e m)
  (if (empty? m)
    (fn () e)
    (fn () (f (this (this m)) (next (this m)) (foldr f e (next m))))))

(def (map f m)
  (foldr (fn (k v m) (add m (f k v))) {} m))

(def (filter f m)
  (foldr (fn (k v m) (if (f k v) (fn () (add m {k v})) (fn () m))) {} m))
